name: 'Generate Package List'
description: 'Generates a list of packages (without versions) given a dpkg -l style package receipt'
inputs:
  build_receipt:
    description: 'Package receipt for build image'
    required: true
  run_receipt:
    description: 'Package receipt for run image'
    required: true
outputs:
  packages:
    description: 'JSON array of packages contained in build and run images'
    value: ${{ steps.packages.outputs.packages }}

runs:
  using: 'composite'
  steps:
  - id: packages
    shell: bash
    run: |
      #!/usr/bin/env bash
      set -euo pipefail

      # From a line like:
      # ii  binutils-common:amd64     2.38-3ubuntu1                           amd64        Common files for the GNU assembler, linker and binary utilities
      # Extracts binutils-common
      build=$(awk '{if ($1 == "ii" ) print $2}' "${{ inputs.build_receipt }}" | sed -E 's/\:.*$//g')
      run=$(awk '{if ($1 == "ii" ) print $2}' "${{ inputs.run_receipt }}" | sed -E 's/\:.*$//g')

      packages=$(jq --null-input --compact-output '[]')

      while IFS= read -r pkg; do
        packages=$(echo "${packages}" | jq --compact-output --arg "p" "${pkg}" '. += [$p]')
      done <<< "${build}"

      while IFS= read -r pkg; do
        packages=$(echo "${packages}" | jq --compact-output --arg "p" "${pkg}" '. += [$p]')
      done <<< "${run}"

      printf "::set-output name=packages::%s\n" "${packages}"
